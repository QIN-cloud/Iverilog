Grammar

    0 $accept: start $end

    1 start: %empty
    2      | item_list

    3 item_list: item_list item
    4          | item

    5 item: TOK_STRING
    6     | TOK_Da
    7     | TOK_Dc TOK_STRING
    8     | TOK_Dv TOK_STRING
    9     | TOK_Dy TOK_STRING
   10     | TOK_LIBDIR TOK_PLUSARG
   11     | TOK_LIBDIR_NOCASE TOK_PLUSARG
   12     | TOK_PARAMETER TOK_PLUSARG
   13     | TOK_TIMESCALE TOK_PLUSARG
   14     | TOK_DEFINE TOK_PLUSARG
   15     | TOK_VHDL_WORK TOK_PLUSARG
   16     | TOK_VHDL_LIBDIR TOK_PLUSARG
   17     | TOK_INCDIR inc_args
   18     | TOK_LIBEXT libext_args
   19     | TOK_INTEGER_WIDTH TOK_PLUSARG
   20     | TOK_WIDTH_CAP TOK_PLUSARG
   21     | TOK_PLUSWORD skip_args
   22     | TOK_PLUSWORD
   23     | error

   24 inc_args: inc_args inc_arg
   25         | inc_arg

   26 inc_arg: TOK_PLUSARG

   27 libext_args: libext_args libext_arg
   28            | libext_arg

   29 libext_arg: TOK_PLUSARG

   30 skip_args: skip_args skip_arg
   31          | skip_arg

   32 skip_arg: TOK_PLUSARG


Terminals, with rules where they appear

$end (0) 0
error (256) 23
TOK_Da (258) 6
TOK_Dc (259) 7
TOK_Dv (260) 8
TOK_Dy (261) 9
TOK_DEFINE (262) 14
TOK_INCDIR (263) 17
TOK_INTEGER_WIDTH (264) 19
TOK_LIBDIR (265) 10
TOK_LIBDIR_NOCASE (266) 11
TOK_LIBEXT (267) 18
TOK_PARAMETER (268) 12
TOK_TIMESCALE (269) 13
TOK_VHDL_WORK (270) 15
TOK_VHDL_LIBDIR (271) 16
TOK_WIDTH_CAP (272) 20
TOK_PLUSARG (273) 10 11 12 13 14 15 16 19 20 26 29 32
TOK_PLUSWORD (274) 21 22
TOK_STRING (275) 5 7 8 9


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
start (22)
    on left: 1 2, on right: 0
item_list (23)
    on left: 3 4, on right: 2 3
item (24)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, on right:
    3 4
inc_args (25)
    on left: 24 25, on right: 17 24
inc_arg (26)
    on left: 26, on right: 24 25
libext_args (27)
    on left: 27 28, on right: 18 27
libext_arg (28)
    on left: 29, on right: 27 28
skip_args (29)
    on left: 30 31, on right: 21 30
skip_arg (30)
    on left: 32, on right: 30 31


State 0

    0 $accept: . start $end

    error              shift, and go to state 1
    TOK_Da             shift, and go to state 2
    TOK_Dc             shift, and go to state 3
    TOK_Dv             shift, and go to state 4
    TOK_Dy             shift, and go to state 5
    TOK_DEFINE         shift, and go to state 6
    TOK_INCDIR         shift, and go to state 7
    TOK_INTEGER_WIDTH  shift, and go to state 8
    TOK_LIBDIR         shift, and go to state 9
    TOK_LIBDIR_NOCASE  shift, and go to state 10
    TOK_LIBEXT         shift, and go to state 11
    TOK_PARAMETER      shift, and go to state 12
    TOK_TIMESCALE      shift, and go to state 13
    TOK_VHDL_WORK      shift, and go to state 14
    TOK_VHDL_LIBDIR    shift, and go to state 15
    TOK_WIDTH_CAP      shift, and go to state 16
    TOK_PLUSWORD       shift, and go to state 17
    TOK_STRING         shift, and go to state 18

    $end  reduce using rule 1 (start)

    start      go to state 19
    item_list  go to state 20
    item       go to state 21


State 1

   23 item: error .

    $default  reduce using rule 23 (item)


State 2

    6 item: TOK_Da .

    $default  reduce using rule 6 (item)


State 3

    7 item: TOK_Dc . TOK_STRING

    TOK_STRING  shift, and go to state 22


State 4

    8 item: TOK_Dv . TOK_STRING

    TOK_STRING  shift, and go to state 23


State 5

    9 item: TOK_Dy . TOK_STRING

    TOK_STRING  shift, and go to state 24


State 6

   14 item: TOK_DEFINE . TOK_PLUSARG

    TOK_PLUSARG  shift, and go to state 25


State 7

   17 item: TOK_INCDIR . inc_args

    TOK_PLUSARG  shift, and go to state 26

    inc_args  go to state 27
    inc_arg   go to state 28


State 8

   19 item: TOK_INTEGER_WIDTH . TOK_PLUSARG

    TOK_PLUSARG  shift, and go to state 29


State 9

   10 item: TOK_LIBDIR . TOK_PLUSARG

    TOK_PLUSARG  shift, and go to state 30


State 10

   11 item: TOK_LIBDIR_NOCASE . TOK_PLUSARG

    TOK_PLUSARG  shift, and go to state 31


State 11

   18 item: TOK_LIBEXT . libext_args

    TOK_PLUSARG  shift, and go to state 32

    libext_args  go to state 33
    libext_arg   go to state 34


State 12

   12 item: TOK_PARAMETER . TOK_PLUSARG

    TOK_PLUSARG  shift, and go to state 35


State 13

   13 item: TOK_TIMESCALE . TOK_PLUSARG

    TOK_PLUSARG  shift, and go to state 36


State 14

   15 item: TOK_VHDL_WORK . TOK_PLUSARG

    TOK_PLUSARG  shift, and go to state 37


State 15

   16 item: TOK_VHDL_LIBDIR . TOK_PLUSARG

    TOK_PLUSARG  shift, and go to state 38


State 16

   20 item: TOK_WIDTH_CAP . TOK_PLUSARG

    TOK_PLUSARG  shift, and go to state 39


State 17

   21 item: TOK_PLUSWORD . skip_args
   22     | TOK_PLUSWORD .

    TOK_PLUSARG  shift, and go to state 40

    $default  reduce using rule 22 (item)

    skip_args  go to state 41
    skip_arg   go to state 42


State 18

    5 item: TOK_STRING .

    $default  reduce using rule 5 (item)


State 19

    0 $accept: start . $end

    $end  shift, and go to state 43


State 20

    2 start: item_list .
    3 item_list: item_list . item

    error              shift, and go to state 1
    TOK_Da             shift, and go to state 2
    TOK_Dc             shift, and go to state 3
    TOK_Dv             shift, and go to state 4
    TOK_Dy             shift, and go to state 5
    TOK_DEFINE         shift, and go to state 6
    TOK_INCDIR         shift, and go to state 7
    TOK_INTEGER_WIDTH  shift, and go to state 8
    TOK_LIBDIR         shift, and go to state 9
    TOK_LIBDIR_NOCASE  shift, and go to state 10
    TOK_LIBEXT         shift, and go to state 11
    TOK_PARAMETER      shift, and go to state 12
    TOK_TIMESCALE      shift, and go to state 13
    TOK_VHDL_WORK      shift, and go to state 14
    TOK_VHDL_LIBDIR    shift, and go to state 15
    TOK_WIDTH_CAP      shift, and go to state 16
    TOK_PLUSWORD       shift, and go to state 17
    TOK_STRING         shift, and go to state 18

    $end  reduce using rule 2 (start)

    item  go to state 44


State 21

    4 item_list: item .

    $default  reduce using rule 4 (item_list)


State 22

    7 item: TOK_Dc TOK_STRING .

    $default  reduce using rule 7 (item)


State 23

    8 item: TOK_Dv TOK_STRING .

    $default  reduce using rule 8 (item)


State 24

    9 item: TOK_Dy TOK_STRING .

    $default  reduce using rule 9 (item)


State 25

   14 item: TOK_DEFINE TOK_PLUSARG .

    $default  reduce using rule 14 (item)


State 26

   26 inc_arg: TOK_PLUSARG .

    $default  reduce using rule 26 (inc_arg)


State 27

   17 item: TOK_INCDIR inc_args .
   24 inc_args: inc_args . inc_arg

    TOK_PLUSARG  shift, and go to state 26

    $default  reduce using rule 17 (item)

    inc_arg  go to state 45


State 28

   25 inc_args: inc_arg .

    $default  reduce using rule 25 (inc_args)


State 29

   19 item: TOK_INTEGER_WIDTH TOK_PLUSARG .

    $default  reduce using rule 19 (item)


State 30

   10 item: TOK_LIBDIR TOK_PLUSARG .

    $default  reduce using rule 10 (item)


State 31

   11 item: TOK_LIBDIR_NOCASE TOK_PLUSARG .

    $default  reduce using rule 11 (item)


State 32

   29 libext_arg: TOK_PLUSARG .

    $default  reduce using rule 29 (libext_arg)


State 33

   18 item: TOK_LIBEXT libext_args .
   27 libext_args: libext_args . libext_arg

    TOK_PLUSARG  shift, and go to state 32

    $default  reduce using rule 18 (item)

    libext_arg  go to state 46


State 34

   28 libext_args: libext_arg .

    $default  reduce using rule 28 (libext_args)


State 35

   12 item: TOK_PARAMETER TOK_PLUSARG .

    $default  reduce using rule 12 (item)


State 36

   13 item: TOK_TIMESCALE TOK_PLUSARG .

    $default  reduce using rule 13 (item)


State 37

   15 item: TOK_VHDL_WORK TOK_PLUSARG .

    $default  reduce using rule 15 (item)


State 38

   16 item: TOK_VHDL_LIBDIR TOK_PLUSARG .

    $default  reduce using rule 16 (item)


State 39

   20 item: TOK_WIDTH_CAP TOK_PLUSARG .

    $default  reduce using rule 20 (item)


State 40

   32 skip_arg: TOK_PLUSARG .

    $default  reduce using rule 32 (skip_arg)


State 41

   21 item: TOK_PLUSWORD skip_args .
   30 skip_args: skip_args . skip_arg

    TOK_PLUSARG  shift, and go to state 40

    $default  reduce using rule 21 (item)

    skip_arg  go to state 47


State 42

   31 skip_args: skip_arg .

    $default  reduce using rule 31 (skip_args)


State 43

    0 $accept: start $end .

    $default  accept


State 44

    3 item_list: item_list item .

    $default  reduce using rule 3 (item_list)


State 45

   24 inc_args: inc_args inc_arg .

    $default  reduce using rule 24 (inc_args)


State 46

   27 libext_args: libext_args libext_arg .

    $default  reduce using rule 27 (libext_args)


State 47

   30 skip_args: skip_args skip_arg .

    $default  reduce using rule 30 (skip_args)
